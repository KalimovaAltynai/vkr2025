from fastapi import FastAPI, Request, Depends
from fastapi.responses import HTMLResponse
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from starlette.middleware.sessions import SessionMiddleware

from routers import upload, filter, search, clustering, users, logs

app = FastAPI()

# ‚õìÔ∏è –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
app.include_router(upload.router)
app.include_router(filter.router)
app.include_router(search.router)
app.include_router(clustering.router)
app.include_router(users.router)
app.include_router(logs.router)

# üåê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏–∫–∏ –∏ —à–∞–±–ª–æ–Ω–æ–≤
app.mount("/static", StaticFiles(directory="static"), name="static")
templates = Jinja2Templates(directory="templates")

# üîê –°–µ—Å—Å–∏–∏ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ cookie)
app.add_middleware(SessionMiddleware, secret_key="super-secret-key")

# üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.get("/", response_class=HTMLResponse)
async def read_index(request: Request):
    return templates.TemplateResponse("index.html", {"request": request})

# üì∞ –°—Ç–∞—Ç—å—è (–ø–æ ID –∏–ª–∏ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞)
@app.get("/article/{article_id}", response_class=HTMLResponse)
async def read_article(request: Request, article_id: int):
    # –ú–æ–∂–Ω–æ —Ç—É—Ç –∂–µ –¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä–∫—É –∏–∑ –ë–î, –ø–æ–∫–∞ –º–æ–∫:
    return templates.TemplateResponse("article.html", {"request": request, "article": {
        "title": "–ü—Ä–∏–º–µ—Ä —Å—Ç–∞—Ç—å–∏", "abstract": "–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è...", "keywords": "–ø—Ä–∏–º–µ—Ä, –¥–∞–Ω–Ω—ã–µ",
        "figures_count": 1, "tables_count": 2, "file_name": "example.pdf"
    }, "user_id": 1})

# ‚öôÔ∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@app.get("/admin", response_class=HTMLResponse)
async def admin_panel(request: Request):
    return templates.TemplateResponse("admin.html", {"request": request})